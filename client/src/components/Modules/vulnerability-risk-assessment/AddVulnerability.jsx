import { useState } from 'react';

import axios from 'axios';
// import { API_PATHS } from '../apiConfig';

import Popup from '../../utils/Popup';

const AddVulnerability = ({
  showAddVulnerabilityPopup,
  setShowAddVulnerabilityPopup,
  refreshVulnerabilityList
}) => {
  const [newVulnerability, setNewVulnerability] = useState({
    description: '',
    severity: '',
    asset_id: '',
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setNewVulnerability({ ...newVulnerability, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      // Make the POST request to create a new vulnerability
      const response = await axios.post(API_PATHS.ADD_VULNERABILITY, {
        description: newVulnerability.description,
        severity: newVulnerability.severity,
        asset_id: newVulnerability.asset_id,
      });

      // Display success message
      alert('New Vulnerability added successfully');

      // Clear form fields
      setNewVulnerability({
        description: '',
        severity: '',
        asset_id: '',
      });

      // Refresh the vulnerability list
      refreshVulnerabilityList();

      // Close the popup
      setShowAddVulnerabilityPopup(false);
    } catch (err) {
      console.error('Error adding vulnerability:', err);
      alert('Failed to add vulnerability. Please try again.');
    }
  };

  if (!showAddVulnerabilityPopup) return null;

  return (
    <Popup>
      <h3>Add New Vulnerability</h3>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          name="description"
          placeholder="Enter Description"
          value={newVulnerability.description}
          onChange={handleInputChange}
          required
        />
        <input
          type="text"
          name="severity"
          placeholder="Enter Severity (e.g., Low, Medium, High)"
          value={newVulnerability.severity}
          onChange={handleInputChange}
          required
        />
        <input
          type="number"
          name="asset_id"
          placeholder="Enter Asset ID"
          value={newVulnerability.asset_id}
          onChange={handleInputChange}
          required
        />
        <button type="submit">Add</button>
        <button
          className="button-cancel"
          type="button"
          onClick={() => setShowAddVulnerabilityPopup(false)}
        >
          Cancel
        </button>
      </form>
    </Popup>
  );
};

export default AddVulnerability;